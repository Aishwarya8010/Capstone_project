{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "421fa4a8",
   "metadata": {},
   "outputs": [],
   "source": [
    "###### Importing of pacakage----\n",
    "\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "from sklearn.model_selection import train_test_split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "09c66158",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = pd.read_csv('Makhan location details.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "6563e481",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   Property_id  City_id  City_name  Locality_ID  \\\n",
      "0     15579866        1  Ahmedabad        51749   \n",
      "1     15579809        1  Ahmedabad        51749   \n",
      "2     15579270        1  Ahmedabad        55547   \n",
      "3     15578759        1  Ahmedabad        52593   \n",
      "4     15578265        1  Ahmedabad        51973   \n",
      "\n",
      "                         Locality_Name  Longitude   Latitude  Sub_urban_ID  \\\n",
      "0                             Bodakdev  72.520195  23.040195         10003   \n",
      "1                             Bodakdev  72.502571  23.032154         10003   \n",
      "2                                 Sola  72.514954  23.074862         10003   \n",
      "3  Near Nirma University On SG Highway  72.550751  23.129829         10003   \n",
      "4                        Prahlad Nagar  72.504997  23.010014         10003   \n",
      "\n",
      "  Sub_urban_name  \n",
      "0     SG Highway  \n",
      "1     SG Highway  \n",
      "2     SG Highway  \n",
      "3     SG Highway  \n",
      "4     SG Highway  \n"
     ]
    }
   ],
   "source": [
    "print(data.head())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "853fc287",
   "metadata": {},
   "source": [
    "# LinearRegression model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "70448911",
   "metadata": {},
   "outputs": [],
   "source": [
    "data.drop('City_id',axis=1,inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "00d1014e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Property_id</th>\n",
       "      <th>City_name</th>\n",
       "      <th>Locality_ID</th>\n",
       "      <th>Locality_Name</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Sub_urban_ID</th>\n",
       "      <th>Sub_urban_name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>15579866</td>\n",
       "      <td>Ahmedabad</td>\n",
       "      <td>51749</td>\n",
       "      <td>Bodakdev</td>\n",
       "      <td>72.520195</td>\n",
       "      <td>23.040195</td>\n",
       "      <td>10003</td>\n",
       "      <td>SG Highway</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>15579809</td>\n",
       "      <td>Ahmedabad</td>\n",
       "      <td>51749</td>\n",
       "      <td>Bodakdev</td>\n",
       "      <td>72.502571</td>\n",
       "      <td>23.032154</td>\n",
       "      <td>10003</td>\n",
       "      <td>SG Highway</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>15579270</td>\n",
       "      <td>Ahmedabad</td>\n",
       "      <td>55547</td>\n",
       "      <td>Sola</td>\n",
       "      <td>72.514954</td>\n",
       "      <td>23.074862</td>\n",
       "      <td>10003</td>\n",
       "      <td>SG Highway</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>15578759</td>\n",
       "      <td>Ahmedabad</td>\n",
       "      <td>52593</td>\n",
       "      <td>Near Nirma University On SG Highway</td>\n",
       "      <td>72.550751</td>\n",
       "      <td>23.129829</td>\n",
       "      <td>10003</td>\n",
       "      <td>SG Highway</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>15578265</td>\n",
       "      <td>Ahmedabad</td>\n",
       "      <td>51973</td>\n",
       "      <td>Prahlad Nagar</td>\n",
       "      <td>72.504997</td>\n",
       "      <td>23.010014</td>\n",
       "      <td>10003</td>\n",
       "      <td>SG Highway</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Property_id  City_name  Locality_ID                        Locality_Name  \\\n",
       "0     15579866  Ahmedabad        51749                             Bodakdev   \n",
       "1     15579809  Ahmedabad        51749                             Bodakdev   \n",
       "2     15579270  Ahmedabad        55547                                 Sola   \n",
       "3     15578759  Ahmedabad        52593  Near Nirma University On SG Highway   \n",
       "4     15578265  Ahmedabad        51973                        Prahlad Nagar   \n",
       "\n",
       "   Longitude   Latitude  Sub_urban_ID Sub_urban_name  \n",
       "0  72.520195  23.040195         10003     SG Highway  \n",
       "1  72.502571  23.032154         10003     SG Highway  \n",
       "2  72.514954  23.074862         10003     SG Highway  \n",
       "3  72.550751  23.129829         10003     SG Highway  \n",
       "4  72.504997  23.010014         10003     SG Highway  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "198df7ae",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['Property_id', 'City_name', 'Locality_ID', 'Locality_Name', 'Longitude',\n",
      "       'Latitude', 'Sub_urban_ID', 'Sub_urban_name'],\n",
      "      dtype='object')\n",
      "Property_id         int64\n",
      "City_name          object\n",
      "Locality_ID         int64\n",
      "Locality_Name      object\n",
      "Longitude         float64\n",
      "Latitude          float64\n",
      "Sub_urban_ID        int64\n",
      "Sub_urban_name     object\n",
      "dtype: object\n"
     ]
    }
   ],
   "source": [
    "print(data.columns)\n",
    "print(data.dtypes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "7975b6bc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Latitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>72.520195</td>\n",
       "      <td>23.040195</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>72.502571</td>\n",
       "      <td>23.032154</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Longitude   Latitude\n",
       "0  72.520195  23.040195\n",
       "1  72.502571  23.032154"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "### We have predict the insurance based on charges -\n",
    "data = data[['Longitude','Latitude']]\n",
    "data.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "65ea9bd2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(332096, 2)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "48172697",
   "metadata": {},
   "outputs": [],
   "source": [
    "#### Sampling of data ---\n",
    "training,testing = train_test_split(data,test_size=0.2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "46c3c709",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Latitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>154552</th>\n",
       "      <td>73.010933</td>\n",
       "      <td>19.209488</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>265472</th>\n",
       "      <td>78.448532</td>\n",
       "      <td>17.157282</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183232</th>\n",
       "      <td>78.400345</td>\n",
       "      <td>17.552664</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>231862</th>\n",
       "      <td>77.087624</td>\n",
       "      <td>28.728905</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>143813</th>\n",
       "      <td>73.014877</td>\n",
       "      <td>18.965849</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Longitude   Latitude\n",
       "154552  73.010933  19.209488\n",
       "265472  78.448532  17.157282\n",
       "183232  78.400345  17.552664\n",
       "231862  77.087624  28.728905\n",
       "143813  73.014877  18.965849"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "training.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "b27fefab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(66420, 2)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "testing.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "965bc2ed",
   "metadata": {},
   "outputs": [],
   "source": [
    "#### Defining------\n",
    "x = training['Longitude']\n",
    "y = training['Latitude']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "4ddb2d19",
   "metadata": {},
   "outputs": [],
   "source": [
    "x = x.values.reshape(-1,1)\n",
    "y = y.values.reshape(-1,1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "7069eb07",
   "metadata": {},
   "outputs": [],
   "source": [
    "#### linear Regression Linear model-----\n",
    "from sklearn.linear_model import LinearRegression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "714f2d94",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "LinearRegression()\n"
     ]
    }
   ],
   "source": [
    "##### We have to create a object of this linear Regression model----\n",
    "model = LinearRegression()              ### y = mx + b\n",
    "print(model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "0bc224de",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model training is Done\n",
      "LinearRegression()\n"
     ]
    }
   ],
   "source": [
    "train_model = model.fit(x,y)\n",
    "print(\"Model training is Done\")\n",
    "print(train_model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "ffa3933e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[0.12495877]]\n",
      "[10.05557753]\n"
     ]
    }
   ],
   "source": [
    "print(model.coef_)         #### this is a m value\n",
    "print(model.intercept_)    ###3 y = mx = b this is b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "2b669e1c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Latitude of 13.192638 is 11.69504096436204\n"
     ]
    }
   ],
   "source": [
    "##### Equation after training model \n",
    "x1 = 13.192638\n",
    "y = 0.12516458*x1 + 10.04378997\n",
    "print(\"The Latitude of {} is {}\".format(x1,y))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "9d64fd9b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[77.03626251],\n",
       "       [81.11066437],\n",
       "       [77.75047302],\n",
       "       ...,\n",
       "       [77.09102631],\n",
       "       [73.12992859],\n",
       "       [80.24960327]])"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "##### For validation we are passing only x and it is predicting y \n",
    "x_test = testing['Longitude'].values.reshape(-1,1)\n",
    "x_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "7ab1c0d0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[19.681934  ],\n",
       "       [20.19106624],\n",
       "       [19.77118087],\n",
       "       ...,\n",
       "       [19.68877722],\n",
       "       [19.19380333],\n",
       "       [20.08346911]])"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pred_charges = train_model.predict(x_test)\n",
    "pred_charges"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "464d6c56",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>pred_charges</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>244234</th>\n",
       "      <td>77.036263</td>\n",
       "      <td>28.592194</td>\n",
       "      <td>19.681934</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>225538</th>\n",
       "      <td>81.110664</td>\n",
       "      <td>26.770735</td>\n",
       "      <td>20.191066</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>310323</th>\n",
       "      <td>77.750473</td>\n",
       "      <td>13.006270</td>\n",
       "      <td>19.771181</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>166706</th>\n",
       "      <td>78.331184</td>\n",
       "      <td>17.527809</td>\n",
       "      <td>19.843746</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>309268</th>\n",
       "      <td>77.657913</td>\n",
       "      <td>13.077952</td>\n",
       "      <td>19.759615</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>195626</th>\n",
       "      <td>80.184341</td>\n",
       "      <td>12.946899</td>\n",
       "      <td>20.075314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>294930</th>\n",
       "      <td>80.969620</td>\n",
       "      <td>26.774920</td>\n",
       "      <td>20.173441</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>227859</th>\n",
       "      <td>77.091026</td>\n",
       "      <td>28.621193</td>\n",
       "      <td>19.688777</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>125883</th>\n",
       "      <td>73.129929</td>\n",
       "      <td>19.257086</td>\n",
       "      <td>19.193803</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>195664</th>\n",
       "      <td>80.249603</td>\n",
       "      <td>13.060400</td>\n",
       "      <td>20.083469</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>66420 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Longitude   Latitude  pred_charges\n",
       "244234  77.036263  28.592194     19.681934\n",
       "225538  81.110664  26.770735     20.191066\n",
       "310323  77.750473  13.006270     19.771181\n",
       "166706  78.331184  17.527809     19.843746\n",
       "309268  77.657913  13.077952     19.759615\n",
       "...           ...        ...           ...\n",
       "195626  80.184341  12.946899     20.075314\n",
       "294930  80.969620  26.774920     20.173441\n",
       "227859  77.091026  28.621193     19.688777\n",
       "125883  73.129929  19.257086     19.193803\n",
       "195664  80.249603  13.060400     20.083469\n",
       "\n",
       "[66420 rows x 3 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "testing['pred_charges'] = pred_charges\n",
    "testing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "ea2f8a47",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>pred_charges</th>\n",
       "      <th>Error</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>244234</th>\n",
       "      <td>77.036263</td>\n",
       "      <td>28.592194</td>\n",
       "      <td>19.681934</td>\n",
       "      <td>57.354329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>225538</th>\n",
       "      <td>81.110664</td>\n",
       "      <td>26.770735</td>\n",
       "      <td>20.191066</td>\n",
       "      <td>60.919598</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>310323</th>\n",
       "      <td>77.750473</td>\n",
       "      <td>13.006270</td>\n",
       "      <td>19.771181</td>\n",
       "      <td>57.979292</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>166706</th>\n",
       "      <td>78.331184</td>\n",
       "      <td>17.527809</td>\n",
       "      <td>19.843746</td>\n",
       "      <td>58.487439</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>309268</th>\n",
       "      <td>77.657913</td>\n",
       "      <td>13.077952</td>\n",
       "      <td>19.759615</td>\n",
       "      <td>57.898299</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>195626</th>\n",
       "      <td>80.184341</td>\n",
       "      <td>12.946899</td>\n",
       "      <td>20.075314</td>\n",
       "      <td>60.109027</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>294930</th>\n",
       "      <td>80.969620</td>\n",
       "      <td>26.774920</td>\n",
       "      <td>20.173441</td>\n",
       "      <td>60.796178</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>227859</th>\n",
       "      <td>77.091026</td>\n",
       "      <td>28.621193</td>\n",
       "      <td>19.688777</td>\n",
       "      <td>57.402249</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>125883</th>\n",
       "      <td>73.129929</td>\n",
       "      <td>19.257086</td>\n",
       "      <td>19.193803</td>\n",
       "      <td>53.936125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>195664</th>\n",
       "      <td>80.249603</td>\n",
       "      <td>13.060400</td>\n",
       "      <td>20.083469</td>\n",
       "      <td>60.166134</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>66420 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Longitude   Latitude  pred_charges      Error\n",
       "244234  77.036263  28.592194     19.681934  57.354329\n",
       "225538  81.110664  26.770735     20.191066  60.919598\n",
       "310323  77.750473  13.006270     19.771181  57.979292\n",
       "166706  78.331184  17.527809     19.843746  58.487439\n",
       "309268  77.657913  13.077952     19.759615  57.898299\n",
       "...           ...        ...           ...        ...\n",
       "195626  80.184341  12.946899     20.075314  60.109027\n",
       "294930  80.969620  26.774920     20.173441  60.796178\n",
       "227859  77.091026  28.621193     19.688777  57.402249\n",
       "125883  73.129929  19.257086     19.193803  53.936125\n",
       "195664  80.249603  13.060400     20.083469  60.166134\n",
       "\n",
       "[66420 rows x 4 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "testing['Error'] = testing['Longitude'] - testing['pred_charges']       ###### actual - predicted\n",
    "testing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "8b8854a7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Latitude', ylabel='pred_charges'>"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.regplot(x = 'Latitude',y = 'pred_charges',data = testing)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "92ba1bce",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Latitude', ylabel='Longitude'>"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.regplot(x = 'Latitude',y = 'Longitude',data = testing)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d9062485",
   "metadata": {},
   "source": [
    "# Clustering"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "76d875d6",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt \n",
    "from sklearn.cluster import KMeans\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.metrics import r2_score,mean_squared_error"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "14f77c55",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv('Makhan location details.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "8877c6f2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   Property_id  City_id  City_name  Locality_ID  \\\n",
      "0     15579866        1  Ahmedabad        51749   \n",
      "1     15579809        1  Ahmedabad        51749   \n",
      "2     15579270        1  Ahmedabad        55547   \n",
      "3     15578759        1  Ahmedabad        52593   \n",
      "4     15578265        1  Ahmedabad        51973   \n",
      "\n",
      "                         Locality_Name  Longitude   Latitude  Sub_urban_ID  \\\n",
      "0                             Bodakdev  72.520195  23.040195         10003   \n",
      "1                             Bodakdev  72.502571  23.032154         10003   \n",
      "2                                 Sola  72.514954  23.074862         10003   \n",
      "3  Near Nirma University On SG Highway  72.550751  23.129829         10003   \n",
      "4                        Prahlad Nagar  72.504997  23.010014         10003   \n",
      "\n",
      "  Sub_urban_name  \n",
      "0     SG Highway  \n",
      "1     SG Highway  \n",
      "2     SG Highway  \n",
      "3     SG Highway  \n",
      "4     SG Highway  \n"
     ]
    }
   ],
   "source": [
    "print(df.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "ee4d396e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Longitude', ylabel='Latitude'>"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(x = 'Longitude', y = 'Latitude', data= data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "794c2ef7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Latitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>72.520195</td>\n",
       "      <td>23.040195</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>72.502571</td>\n",
       "      <td>23.032154</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Longitude   Latitude\n",
       "0  72.520195  23.040195\n",
       "1  72.502571  23.032154"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x = data [['Longitude','Latitude']]\n",
    "x.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "c1ecbed5",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Aishwarya21\\.conda\\lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KMeans(n_clusters=3)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KMeans</label><div class=\"sk-toggleable__content\"><pre>KMeans(n_clusters=3)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "KMeans(n_clusters=3)"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cluster = KMeans(n_clusters=3)\n",
    "cluster.fit(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "ecf41118",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([2, 2, 2, ..., 1, 1, 1]), 332096)"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "p = cluster.predict(x)\n",
    "p,len(p)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "f3ce9c6e",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Aishwarya21\\.conda\\lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "C:\\Users\\Aishwarya21\\.conda\\lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "C:\\Users\\Aishwarya21\\.conda\\lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "C:\\Users\\Aishwarya21\\.conda\\lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "C:\\Users\\Aishwarya21\\.conda\\lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "C:\\Users\\Aishwarya21\\.conda\\lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "C:\\Users\\Aishwarya21\\.conda\\lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "C:\\Users\\Aishwarya21\\.conda\\lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "C:\\Users\\Aishwarya21\\.conda\\lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "C:\\Users\\Aishwarya21\\.conda\\lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "wcss = []\n",
    "for i in range (1,11):\n",
    "    km = KMeans (n_clusters= i,max_iter=200)\n",
    "    km.fit(x)\n",
    "    wcss.append(km.inertia_)                             #### calculates the squared error\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "ca50b636",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[15123218.366886977,\n",
       " 6674871.046187383,\n",
       " 3172409.2736612693,\n",
       " 1226152.2524149432,\n",
       " 671754.9422096455,\n",
       " 318630.50201952783,\n",
       " 156800.86650478555,\n",
       " 27920.474101895175,\n",
       " 17325.254746723007,\n",
       " 10998.192738839918]"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "wcss"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "b6b809d0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(range(1,11),wcss)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "0449b9f2",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Aishwarya21\\.conda\\lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(array([1, 1, 1, ..., 2, 2, 2]), 332096)"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cluster = KMeans(n_clusters=5)\n",
    "cluster.fit(x)\n",
    "p1 = cluster.predict(x)\n",
    "p1,len(p1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "b9dc2d6a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Latitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>72.520195</td>\n",
       "      <td>23.040195</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>72.502571</td>\n",
       "      <td>23.032154</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>72.514954</td>\n",
       "      <td>23.074862</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>72.550751</td>\n",
       "      <td>23.129829</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>72.504997</td>\n",
       "      <td>23.010014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>332091</th>\n",
       "      <td>77.023399</td>\n",
       "      <td>28.683020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>332092</th>\n",
       "      <td>77.023399</td>\n",
       "      <td>28.683020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>332093</th>\n",
       "      <td>77.060219</td>\n",
       "      <td>28.570539</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>332094</th>\n",
       "      <td>77.057671</td>\n",
       "      <td>28.574858</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>332095</th>\n",
       "      <td>77.057045</td>\n",
       "      <td>28.575302</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>332096 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Longitude   Latitude\n",
       "0       72.520195  23.040195\n",
       "1       72.502571  23.032154\n",
       "2       72.514954  23.074862\n",
       "3       72.550751  23.129829\n",
       "4       72.504997  23.010014\n",
       "...           ...        ...\n",
       "332091  77.023399  28.683020\n",
       "332092  77.023399  28.683020\n",
       "332093  77.060219  28.570539\n",
       "332094  77.057671  28.574858\n",
       "332095  77.057045  28.575302\n",
       "\n",
       "[332096 rows x 2 columns]"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "006cce73",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   Property_id  City_id  City_name  Locality_ID  \\\n",
      "0     15579866        1  Ahmedabad        51749   \n",
      "1     15579809        1  Ahmedabad        51749   \n",
      "2     15579270        1  Ahmedabad        55547   \n",
      "3     15578759        1  Ahmedabad        52593   \n",
      "4     15578265        1  Ahmedabad        51973   \n",
      "\n",
      "                         Locality_Name  Longitude   Latitude  Sub_urban_ID  \\\n",
      "0                             Bodakdev  72.520195  23.040195         10003   \n",
      "1                             Bodakdev  72.502571  23.032154         10003   \n",
      "2                                 Sola  72.514954  23.074862         10003   \n",
      "3  Near Nirma University On SG Highway  72.550751  23.129829         10003   \n",
      "4                        Prahlad Nagar  72.504997  23.010014         10003   \n",
      "\n",
      "  Sub_urban_name  cluster  \n",
      "0     SG Highway        1  \n",
      "1     SG Highway        1  \n",
      "2     SG Highway        1  \n",
      "3     SG Highway        1  \n",
      "4     SG Highway        1  \n"
     ]
    }
   ],
   "source": [
    "df['cluster']= p1\n",
    "print(df.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "77c5d667",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Longitude', ylabel='Latitude'>"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(x='Longitude', y = 'Latitude',hue= 'cluster',data= df, palette = 'summer')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "4fbc6962",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Latitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>72.520195</td>\n",
       "      <td>23.040195</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>72.502571</td>\n",
       "      <td>23.032154</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>72.514954</td>\n",
       "      <td>23.074862</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>72.550751</td>\n",
       "      <td>23.129829</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>72.504997</td>\n",
       "      <td>23.010014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>329997</th>\n",
       "      <td>73.884308</td>\n",
       "      <td>18.511782</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>329998</th>\n",
       "      <td>73.884308</td>\n",
       "      <td>18.511782</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>329999</th>\n",
       "      <td>73.884308</td>\n",
       "      <td>18.511782</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>330000</th>\n",
       "      <td>73.884308</td>\n",
       "      <td>18.511782</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>330001</th>\n",
       "      <td>73.884308</td>\n",
       "      <td>18.511782</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>106316 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Longitude   Latitude\n",
       "0       72.520195  23.040195\n",
       "1       72.502571  23.032154\n",
       "2       72.514954  23.074862\n",
       "3       72.550751  23.129829\n",
       "4       72.504997  23.010014\n",
       "...           ...        ...\n",
       "329997  73.884308  18.511782\n",
       "329998  73.884308  18.511782\n",
       "329999  73.884308  18.511782\n",
       "330000  73.884308  18.511782\n",
       "330001  73.884308  18.511782\n",
       "\n",
       "[106316 rows x 2 columns]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data[df['cluster']==1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "8bb353af",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1    32.013635\n",
      "3    25.009636\n",
      "2    23.573605\n",
      "4    12.638815\n",
      "0     6.764309\n",
      "Name: cluster, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "print(df['cluster'].value_counts(normalize=True)*100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "a2ccc527",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import StandardScaler, MinMaxScaler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "e167fdc3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-1.22659697,  0.61726741],\n",
       "       [-1.23083041,  0.61575334],\n",
       "       [-1.227856  ,  0.62379448],\n",
       "       ...,\n",
       "       [-0.13603712,  1.65854468],\n",
       "       [-0.13664922,  1.65935774],\n",
       "       [-0.1367995 ,  1.65944142]])"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sc = StandardScaler()\n",
    "x_scaled =sc.fit_transform(x)\n",
    "x_scaled"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "e2733127",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Aishwarya21\\.conda\\lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(array([0, 0, 0, ..., 2, 2, 2]), 332096)"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cluster = KMeans(n_clusters=5)\n",
    "cluster.fit(x_scaled)\n",
    "p1 = cluster.predict(x_scaled)\n",
    "p1,len(p1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "ae7797cb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-1.22659697,  0.61726741],\n",
       "       [-1.23083041,  0.61575334],\n",
       "       [-1.227856  ,  0.62379448],\n",
       "       ...,\n",
       "       [-0.13603712,  1.65854468],\n",
       "       [-0.13664922,  1.65935774],\n",
       "       [-0.1367995 ,  1.65944142]])"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sc = StandardScaler()\n",
    "x_scaled =sc.fit_transform(x)\n",
    "x_scaled"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "9938a18e",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Aishwarya21\\.conda\\lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(array([2, 2, 2, ..., 1, 1, 1]), 332096)"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cluster = KMeans(n_clusters=5)\n",
    "cluster.fit(x_scaled)\n",
    "p1 = cluster.predict(x_scaled)\n",
    "p1,len(p1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "e76f40fc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[72.52019501, 23.04019547],\n",
       "       [72.50257111, 23.03215408],\n",
       "       [72.51495361, 23.07486153],\n",
       "       ...,\n",
       "       [77.06021881, 28.57053947],\n",
       "       [77.05767059, 28.57485771],\n",
       "       [77.05704498, 28.57530212]])"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sc.inverse_transform(x_scaled)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c4e738d",
   "metadata": {},
   "source": [
    "# Exploratory Data Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "81548e66",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x179462a17e0>"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.displot(x='Longitude',data=df,kde=True,bins=15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "6911e1b5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x='City_name',data=df,palette='coolwarm');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "7073f3f7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Property_id', ylabel='Density'>"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.kdeplot(df.Property_id, fill=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "122954f6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Longitude', ylabel='City_name'>"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(x = 'Longitude',y='City_name', data = df,estimator='sum',errorbar=None)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "90ebd5a2",
   "metadata": {},
   "source": [
    "# KNN Regrestion"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "e868cd86",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.neighbors import KNeighborsRegressor\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "49268349",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Property_id       0\n",
       "City_id           0\n",
       "City_name         0\n",
       "Locality_ID       0\n",
       "Locality_Name     2\n",
       "Longitude         0\n",
       "Latitude          0\n",
       "Sub_urban_ID      0\n",
       "Sub_urban_name    0\n",
       "cluster           0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "1f6eef36",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df.fillna(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "635b60c8",
   "metadata": {},
   "outputs": [],
   "source": [
    "x = df[['Longitude','Latitude','Locality_ID']]\n",
    "y = df['Property_id']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "6261a5dc",
   "metadata": {},
   "outputs": [],
   "source": [
    "x_train,x_test,y_train,y_test =train_test_split(x,y,test_size=0.2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "1a3fb6e5",
   "metadata": {},
   "outputs": [],
   "source": [
    "knn = KNeighborsRegressor(n_neighbors=3)\n",
    "knn.fit(x_train,y_train)\n",
    "pred = knn.predict(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "70037681",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([14709429.66666667, 11536192.33333333, 14969241.66666667, ...,\n",
       "       10931516.        , 14427551.33333333, 15144857.33333333])"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "1b5ef311",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.16985219464269985"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import r2_score\n",
    "r2_score(y_test,pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "60da25e8",
   "metadata": {},
   "outputs": [],
   "source": [
    "#### Standard method to choose the k\n",
    "#### sqrt(n)\n",
    "from math import sqrt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "e3ca3dac",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "576.2777108304641"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sqrt(len(df))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "3eeca87d",
   "metadata": {},
   "outputs": [],
   "source": [
    "error_rate =[]\n",
    "for i in range (1,40):\n",
    "    knn = KNeighborsRegressor(n_neighbors=3)\n",
    "    knn.fit(x_train,y_train)\n",
    "    pred_i= knn.predict(x_test)\n",
    "    error_rate.append(1 - r2_score(y_test,pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "8672d763",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002,\n",
       " 0.8301478053573002]"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "error_rate"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "382763e2",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x17912992c50>]"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(range(1,40),error_rate)"
   ]
  },
  {
   "cell_type": "raw",
   "id": "f894d565",
   "metadata": {},
   "source": [
    "# Here, according to the data ,we see that different algoritham to use to predict the data,this is the makhan location base data.we choose the linear regression, clustering,knn,EDI to showing the data different different way."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ca4f2318",
   "metadata": {},
   "source": [
    "# Thank you for reviewing !"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
